@using System.Text.RegularExpressions
@using Common
@using Models.DTO
@model IList<NoticeOutputDto>
@{
    ViewBag.Title = "网站公告栏";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Assets/timeline.css" rel="stylesheet" />
<link href="~/Assets/UEditor/third-party/SyntaxHighlighter/styles/shCore.min.css" rel="stylesheet" />
<div class="container min-height780">
    <ol class="cd-breadcrumb triangle">
        <li>@Html.ActionLink("首页", "Index", "Home")</li>
        <li class="current"><em>@ViewBag.Title</em></li>
    </ol>
    @{
        Html.RenderPartial("_Pagination");
    }
    <div class="row">
        <div class="col-md-12">
            <div class="main-timeline">
                @foreach(NoticeOutputDto n in Model) {
                    <div class="timeline">
                        <div class="timeline-content">
                            <div class="circle"><span><i class="fa fa-globe"></i></span>
                            </div>
                            <div class="content">
                                <span class="year">@n.PostDate.ToString("yyyy-MM-dd HH:mm:ss")</span>
                                <h4 class="title">@n.Title</h4>
                                <p class="description">
                                    <a href="/n/@n.Id" class="tippy-scale" title="查看详情">@MvcHtmlString.Create(Regex.Replace(n.Content, "\\s(title|alt)=['\"].+?['\"]", String.Empty).Replace("img src=", $"img title='{CommonHelper.GetSettings("Title")}' data-original="))</a>
                                </p>
                                <div class="icon"><span></span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    @{
        Html.RenderPartial("_Pagination");
    }
		       
</div>
<script src="~/Assets/UEditor/third-party/SyntaxHighlighter/scripts/shCore.min.js"></script>
<script src="~/Assets/UEditor/third-party/SyntaxHighlighter/scripts/bundle.min.js"></script>
<script>
    SyntaxHighlighter.all();
    SyntaxHighlighter.defaults['toolbar'] = false;
</script>