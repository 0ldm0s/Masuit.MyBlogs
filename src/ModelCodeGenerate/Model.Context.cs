//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelCodeGenerate
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ModelContainer : DbContext
    {
        public ModelContainer()
            : base("name=ModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Broadcast> Broadcast { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Comment> Comment { get; set; }
        public virtual DbSet<Contacts> Contacts { get; set; }
        public virtual DbSet<Donate> Donate { get; set; }
        public virtual DbSet<InternalMessage> InternalMessage { get; set; }
        public virtual DbSet<Issue> Issue { get; set; }
        public virtual DbSet<LeaveMessage> LeaveMessage { get; set; }
        public virtual DbSet<Links> Links { get; set; }
        public virtual DbSet<LoginRecord> LoginRecord { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Misc> Misc { get; set; }
        public virtual DbSet<Notice> Notice { get; set; }
        public virtual DbSet<Post> Post { get; set; }
        public virtual DbSet<PostAccessRecord> PostAccessRecord { get; set; }
        public virtual DbSet<PostHistoryVersion> PostHistoryVersion { get; set; }
        public virtual DbSet<SearchDetails> SearchDetails { get; set; }
        public virtual DbSet<Seminar> Seminar { get; set; }
        public virtual DbSet<SystemSetting> SystemSetting { get; set; }
        public virtual DbSet<UserInfo> UserInfo { get; set; }
        public virtual DbSet<FastShare> FastShares { get; set; }
    
        public virtual ObjectResult<sp_getChildrenCommentByParentId_Result> sp_getChildrenCommentByParentId(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getChildrenCommentByParentId_Result>("sp_getChildrenCommentByParentId", parentIdParameter);
        }
    
        public virtual ObjectResult<sp_getChildrenLeaveMsgByParentId_Result> sp_getChildrenLeaveMsgByParentId(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getChildrenLeaveMsgByParentId_Result>("sp_getChildrenLeaveMsgByParentId", parentIdParameter);
        }
    
        public virtual ObjectResult<sp_getInterviewsCurrentMonthDetailsByDays_Result> sp_getInterviewsCurrentMonthDetailsByDays(Nullable<int> recent)
        {
            var recentParameter = recent.HasValue ?
                new ObjectParameter("recent", recent) :
                new ObjectParameter("recent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getInterviewsCurrentMonthDetailsByDays_Result>("sp_getInterviewsCurrentMonthDetailsByDays", recentParameter);
        }
    }
}
