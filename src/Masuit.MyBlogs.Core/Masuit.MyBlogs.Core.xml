<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Masuit.MyBlogs.Core</name>
    </assembly>
    <members>
        <member name="T:Masuit.MyBlogs.Core.Common.CommonHelper">
            <summary>
            公共类库
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.BanRegex">
            <summary>
            敏感词
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.ModRegex">
            <summary>
            审核词
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.DenyIP">
            <summary>
            全局禁止IP
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.IPWhiteList">
            <summary>
            ip白名单
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.IPErrorTimes">
            <summary>
            每IP错误的次数统计
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.SystemSettings">
            <summary>
            系统设定
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.InterviewCount">
            <summary>
            访问量
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.AverageCount">
            <summary>
            平均访问量
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.StartupTime">
            <summary>
            网站启动时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.CommonHelper.DenyIPRange">
            <summary>
            IP黑名单地址段
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.CommonHelper.IsDenyIpAddress(System.String)">
            <summary>
            判断IP地址是否被黑名单
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.CommonHelper.Mapper``1(System.Object)">
            <summary>
            类型映射
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.CommonHelper.SendMail(System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="tos">收件人</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.CommonHelper.IsRobot(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            是否是机器人访问
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Common.DocumentConvert">
            <summary>
            文档转换操作
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.DocumentConvert.Doc2Html(System.String,System.String,System.String)">
            <summary>
            doc转html
            </summary>
            <param name="docPath">doc文件路径</param>
            <param name="htmlDir">生成的html所在目录，由于生成html后会将图片都放到同级的目录下，所以用文件夹保存，默认的html文件名为index.html</param>
            <param name="index">默认文档名为index.html</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.DocumentConvert.Doc2HtmlAsync(System.String,System.String,System.String)">
            <summary>
            doc转html
            </summary>
            <param name="docPath">doc文件路径</param>
            <param name="htmlDir">生成的html所在目录，由于生成html后会将图片都放到同级的目录下，所以用文件夹保存，默认的html文件名为index.html</param>
            <param name="index">默认文档名为index.html</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.DocumentConvert.Doc2Pdf(System.String,System.String,Aspose.Words.PaperSize,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            doc转pdf
            </summary>
            <param name="docPath">doc源文件</param>
            <param name="pdfPath">目标pdf文件</param>
            <param name="paperSize">纸张大小</param>
            <param name="leftMargin">左边距</param>
            <param name="rightMargin">右边距</param>
            <param name="topMargin">上边距</param>
            <param name="bottomMargin">下边距</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.DocumentConvert.Doc2PdfAsync(System.String,System.String,Aspose.Words.PaperSize,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            doc转pdf
            </summary>
            <param name="docPath">doc源文件</param>
            <param name="pdfPath">目标pdf文件</param>
            <param name="paperSize">纸张大小</param>
            <param name="leftMargin">左边距</param>
            <param name="rightMargin">右边距</param>
            <param name="topMargin">上边距</param>
            <param name="bottomMargin">下边距</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.DocumentConvert.Html2Word(System.String,System.String,Aspose.Words.PaperSize,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            html转Word
            </summary>
            <param name="htmlPath">html源文件</param>
            <param name="docPath">目标doc文件</param>
            <param name="paperSize">纸张大小，默认A4纸</param>
            <param name="leftMargin">左边距，默认10</param>
            <param name="rightMargin">右边距，默认10</param>
            <param name="topMargin">上边距，默认10</param>
            <param name="bottomMargin">下边距，默认10</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.DocumentConvert.Html2WordAsync(System.String,System.String,Aspose.Words.PaperSize,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            html转Word
            </summary>
            <param name="htmlPath">html源文件</param>
            <param name="docPath">目标doc文件</param>
            <param name="paperSize">纸张大小，默认A4纸</param>
            <param name="leftMargin">左边距，默认10</param>
            <param name="rightMargin">右边距，默认10</param>
            <param name="topMargin">上边距，默认10</param>
            <param name="bottomMargin">下边距，默认10</param>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Common.HangfireHelper">
            <summary>
            HangfireHelper
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.HangfireHelper.CreateJob(System.Type,System.String,System.String,System.Object[])">
            <summary>
            创建任务
            </summary>
            <param name="type">任务类</param>
            <param name="method">调用方法</param>
            <param name="queue">队列名</param>
            <param name="args">调用参数</param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Common.ImagebedClient">
            <summary>
            图床客户端
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.ImagebedClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            图床客户端
            </summary>
            <param name="httpClient"></param>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Common.ImagebedClient.OssClient">
            <summary>
            OSS客户端
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.ImagebedClient.UploadImage(System.IO.Stream,System.String)">
            <summary>
            上传图片
            </summary>
            <param name="stream"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.ImagebedClient.UploadGitee(System.IO.Stream,System.String)">
            <summary>
            码云图床
            </summary>
            <param name="stream"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.ImagebedClient.UploadGitlab(System.IO.Stream,System.String)">
            <summary>
            gitlab图床
            </summary>
            <param name="stream"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.ImagebedClient.UploadOss(System.IO.Stream,System.String)">
            <summary>
            阿里云Oss图床
            </summary>
            <param name="stream"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.ImagebedClient.UploadSmms(System.IO.Stream,System.String)">
            <summary>
            上传图片到sm图床
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.ImagebedClient.UploadPeople(System.IO.Stream,System.String)">
            <summary>
            上传图片到人民网图床
            </summary>
            <param name="stream"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Common.ImagebedClient.ReplaceImgSrc(System.String)">
            <summary>
            替换img标签的src属性
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Configs.AppConfig">
            <summary>
            应用程序配置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Configs.AppConfig.ConnString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Configs.AppConfig.BaiduAK">
            <summary>
            百度AK
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Configs.AppConfig.Redis">
            <summary>
            Redis连接字符串
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Configs.AppConfig.AliOssConfig">
            <summary>
            OSS配置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Configs.AppConfig.GitlabConfig">
            <summary>
            gitlab图床配置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Configs.AppConfig.GiteeConfig">
            <summary>
            码云图床配置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Configs.AppConfig.ImgbedDomains">
            <summary>
            图床域名
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Configs.HangfireJobInit">
            <summary>
            hangfire配置
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Configs.HangfireJobInit.Start">
            <summary>
            hangfire初始化
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Configs.HangfireJobInit.CheckLinks">
            <summary>
            检查友链
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Configs.HangfireJobInit.EverydayJob">
            <summary>
            每日任务
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Configs.HangfireJobInit.EveryHourJob">
            <summary>
            每小时任务
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Configs.HangfireJobInit.EveryweekJob">
            <summary>
            每周任务
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Configs.RegisterAutomapper">
            <summary>
            注册automapper
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Configs.RegisterAutomapper.Excute">
            <summary>
            初始化
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.AdminController">
            <summary>
            管理页的父控制器
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.AdminController.UserInfoService">
            <summary>
            UserInfoService
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.AdminController.ResultData(System.Object,System.Boolean,System.String,System.Boolean)">
            <summary>
            返回结果json
            </summary>
            <param name="data">响应数据</param>
            <param name="success">响应状态</param>
            <param name="message">响应消息</param>
            <param name="isLogin">登录状态</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.AdminController.PageResult(System.Object,System.Int32,System.Int32)">
            <summary>
            分页响应结果
            </summary>
            <param name="data">数据</param>
            <param name="pageCount">总页数</param>
            <param name="total">总条数</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.AdminController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>在调用操作方法前调用。</summary>
            <param name="filterContext">有关当前请求和操作的信息。</param>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.BannerController">
            <summary>
            banner
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.BannerController.BannerService">
            <summary>
            bannerService
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.BannerController.Get">
            <summary>
            获取全部
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.BannerController.Save(Masuit.MyBlogs.Core.Models.Entity.Banner)">
            <summary>
            保存banner
            </summary>
            <param name="banner"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.BannerController.Delete(System.Int32)">
            <summary>
            删除banner
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.BaseController">
            <summary>
            基本父控制器
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.BaseController.UserInfoService">
            <summary>
            UserInfoService
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.BaseController.MenuService">
            <summary>
            MenuService
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.BaseController.LinksService">
            <summary>
            LinksService
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.BaseController.ResultData(System.Object,System.Boolean,System.String,System.Boolean,System.Net.HttpStatusCode)">
            <summary>
            响应数据
            </summary>
            <param name="data">数据</param>
            <param name="success">响应状态</param>
            <param name="message">响应消息</param>
            <param name="isLogin">登录状态</param>
            <param name="code">http响应码</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.BaseController.PageResult(System.Object,System.Int32,System.Int32)">
            <summary>
            分页响应数据
            </summary>
            <param name="data">数据</param>
            <param name="pageCount">总页数</param>
            <param name="total">总条数</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.BaseController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>在调用操作方法前调用。</summary>
            <param name="filterContext">有关当前请求和操作的信息。</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.BaseController.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>在调用操作方法后调用。</summary>
            <param name="filterContext">有关当前请求和操作的信息。</param>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.CategoryController">
            <summary>
            文章分类
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.CategoryController.CategoryService">
            <summary>
            CategoryService
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CategoryController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ICategoryService)">
            <summary>
            文章分类
            </summary>
            <param name="categoryService"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CategoryController.GetCategories">
            <summary>
            获取所有分类
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CategoryController.Get(System.Int32)">
            <summary>
            获取分类详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CategoryController.Add(Masuit.MyBlogs.Core.Models.Entity.Category)">
            <summary>
            添加分类
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CategoryController.Edit(Masuit.MyBlogs.Core.Models.DTO.CategoryInputDto)">
            <summary>
            编辑分类
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CategoryController.Delete(System.Int32,System.Int32)">
            <summary>
            删除分类
            </summary>
            <param name="id"></param>
            <param name="cid"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.CommentController">
            <summary>
            评论管理
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CommentController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ICommentService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IPostService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IInternalMessageService,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            评论管理
            </summary>
            <param name="commentService"></param>
            <param name="postService"></param>
            <param name="messageService"></param>
            <param name="hostingEnvironment"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CommentController.Put(Masuit.MyBlogs.Core.Models.DTO.CommentInputDto)">
            <summary>
            发表评论
            </summary>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CommentController.CommentVote(System.Int32)">
            <summary>
            评论投票
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CommentController.GetComments(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32)">
            <summary>
            获取评论
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="size"></param>
            <param name="cid"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CommentController.GetPageComments(System.Int32,System.Int32,System.Int32)">
            <summary>
            分页获取评论
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <param name="cid"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CommentController.Pass(System.Int32)">
            <summary>
            审核评论
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CommentController.Delete(System.Int32)">
            <summary>
            删除评论
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.CommentController.GetPendingComments(System.Int32,System.Int32)">
            <summary>
            获取未审核的评论
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.DashboardController">
            <summary>
            控制面板
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.DashboardController.PostService">
            <summary>
            PostService
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.DashboardController.LeaveMessageService">
            <summary>
            LeaveMessageService
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.DashboardController.CommentService">
            <summary>
            CommentService
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DashboardController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IPostService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ICommentService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ILeaveMessageService)">
            <summary>
            控制面板
            </summary>
            <param name="userInfoService"></param>
            <param name="postService"></param>
            <param name="commentService"></param>
            <param name="leaveMessageService"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DashboardController.Index">
            <summary>
            控制面板
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DashboardController.GetMessages">
            <summary>
            获取站内消息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DashboardController.GetLogfiles">
            <summary>
            获取日志文件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DashboardController.Catlog(System.String)">
            <summary>
            查看日志
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DashboardController.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DashboardController.FileManager">
            <summary>
            资源管理器
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.DonateController">
            <summary>
            捐赠管理
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.DonateController.DonateService">
            <summary>
            DonateService
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DonateController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IDonateService)">
            <summary>
            捐赠管理
            </summary>
            <param name="donateService"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DonateController.GetPageData(System.Int32,System.Int32)">
            <summary>
            分页数据
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DonateController.Get(System.Int32)">
            <summary>
            详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DonateController.Save(Masuit.MyBlogs.Core.Models.Entity.Donate)">
            <summary>
            保存数据
            </summary>
            <param name="donate"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.DonateController.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.ErrorController">
            <summary>
            错误页
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ErrorController.Index">
            <summary>
            404
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ErrorController.ServiceUnavailable">
            <summary>
            503
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ErrorController.AccessDeny">
            <summary>
            访问被拒绝
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ErrorController.TempDeny">
            <summary>
            临时被拒绝
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ErrorController.ComingSoon">
            <summary>
            网站升级中
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.FileController">
            <summary>
            资源管理器
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.FileController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Masuit.Tools.Files.ISevenZipCompressor)">
            <summary>
            资源管理器
            </summary>
            <param name="hostingEnvironment"></param>
            <param name="sevenZipCompressor"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.FileController.GetFiles(System.String)">
            <summary>
            获取文件列表
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.FileController.Read(System.String)">
            <summary>
            读取文件内容
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.FileController.Save(System.String,System.String)">
            <summary>
            保存文件
            </summary>
            <param name="filename"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.FileController.Upload(System.String)">
            <summary>
            上传文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.FileController.Handle(Masuit.MyBlogs.Core.Models.ViewModel.FileRequest)">
            <summary>
            操作文件
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.FileController.Handle(System.String,System.String[],System.String)">
            <summary>
            下载文件
            </summary>
            <param name="path"></param>
            <param name="items"></param>
            <param name="toFilename"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.HealthController">
            <summary>
            健康检查
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.HealthController.Check">
            <summary>
            心跳检测
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.HomeController">
            <summary>
            首页
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.HomeController.PostService">
            <summary>
            文章
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.HomeController.CategoryService">
            <summary>
            分类
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.HomeController.SearchDetailsService">
            <summary>
            搜索关键词推荐
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.HomeController.NoticeService">
            <summary>
            网站公告
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.HomeController.FastShareService">
            <summary>
            快速分享
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.HomeController.BannerService">
            <summary>
            banner
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.HomeController.Index(Masuit.MyBlogs.Core.Models.Enum.OrderBy)">
            <summary>
            首页
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.HomeController.Post(System.Int32,System.Int32,Masuit.MyBlogs.Core.Models.Enum.OrderBy)">
            <summary>
            文章列表页
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.HomeController.Tag(System.String,System.Int32,System.Int32,Masuit.MyBlogs.Core.Models.Enum.OrderBy)">
            <summary>
            标签文章页
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="size"></param>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.HomeController.Category(System.Int32,System.Int32,System.Int32,Masuit.MyBlogs.Core.Models.Enum.OrderBy)">
            <summary>
            分类文章页
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="size"></param>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.HomeController.GetIndexPageViewModel(System.Int32,System.Int32,Masuit.MyBlogs.Core.Models.Enum.OrderBy,Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto)">
            <summary>
            获取页面视图模型
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <param name="orderBy"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.LinksController">
            <summary>
            友情链接管理
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.Index">
            <summary>
            友情链接页
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.Apply(Masuit.MyBlogs.Core.Models.Entity.Links)">
            <summary>
            申请友链
            </summary>
            <param name="links"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.Add(Masuit.MyBlogs.Core.Models.Entity.Links)">
            <summary>
            添加友链
            </summary>
            <param name="links"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.Check(System.String)">
            <summary>
            检测回链
            </summary>
            <param name="link"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.Delete(System.Int32)">
            <summary>
            删除友链
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.Edit(Masuit.MyBlogs.Core.Models.Entity.Links)">
            <summary>
            编辑友链
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.GetPageData(System.Int32,System.Int32)">
            <summary>
            分页数据
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.ToggleWhitelist(System.Int32,System.Boolean)">
            <summary>
            切换友情链接的白名单状态
            </summary>
            <param name="id"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.ToggleRecommend(System.Int32,System.Boolean)">
            <summary>
            切换友情链接的推荐状态
            </summary>
            <param name="id"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.LinksController.Toggle(System.Int32,System.Boolean)">
            <summary>
            切换友情链接可用状态
            </summary>
            <param name="id"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.MenuController">
            <summary>
            菜单管理
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.MenuController.MenuService">
            <summary>
            菜单数据服务
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MenuController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IMenuService)">
            <summary>
            菜单管理
            </summary>
            <param name="menuService"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MenuController.GetMenus">
            <summary>
            获取菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MenuController.GetMenuType">
            <summary>
            获取菜单类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MenuController.Delete(System.Int32)">
            <summary>
            删除菜单
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MenuController.Save(Masuit.MyBlogs.Core.Models.DTO.MenuInputDto)">
            <summary>
            保持菜单
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.MiscController">
            <summary>
            杂项页
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.MiscController.MiscService">
            <summary>
            MiscService
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.MiscController.DonateService">
            <summary>
            捐赠
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IMiscService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IDonateService,Microsoft.AspNetCore.Hosting.IHostingEnvironment,System.Net.Http.IHttpClientFactory)">
            <summary>
            杂项页
            </summary>
            <param name="miscService"></param>
            <param name="donateService"></param>
            <param name="hostingEnvironment"></param>
            <param name="httpClientFactory"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.Index(System.Int32)">
            <summary>
            杂项页
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.Donate">
            <summary>
            捐赠
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.DonateList(System.Int32,System.Int32)">
            <summary>
            捐赠列表
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.About">
            <summary>
            关于
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.Disclaimer">
            <summary>
            声明
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.Write(Masuit.MyBlogs.Core.Models.Entity.Misc)">
            <summary>
            创建页面
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.Delete(System.Int32)">
            <summary>
            删除页面
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.Edit(Masuit.MyBlogs.Core.Models.Entity.Misc)">
            <summary>
            编辑页面
            </summary>
            <param name="misc"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.GetPageData(System.Int32,System.Int32)">
            <summary>
            分页数据
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MiscController.Get(System.Int32)">
            <summary>
            详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.MsgController">
            <summary>
            留言板和站内信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.MsgController.LeaveMessageService">
            <summary>
            留言
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.MsgController.MessageService">
            <summary>
            站内信
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ILeaveMessageService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IInternalMessageService,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            留言板和站内信
            </summary>
            <param name="leaveMessageService"></param>
            <param name="messageService"></param>
            <param name="hostingEnvironment"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.Index">
            <summary>
            留言板
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.GetMsgs(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取留言
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <param name="cid"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.Put(Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto)">
            <summary>
            发表留言
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.Pass(System.Int32)">
            <summary>
            审核
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.Delete(System.Int32)">
            <summary>
            删除留言
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.GetPendingMsgs(System.Int32,System.Int32)">
            <summary>
            获取待审核的留言
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.Read(System.Int32)">
            <summary>
            已读站内信
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.Unread(System.Int32)">
            <summary>
            标记为未读
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.DeleteMsg(System.Int32)">
            <summary>
            删除站内信
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.GetInternalMsgs(System.Int32,System.Int32)">
            <summary>
            获取站内信
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.GetUnreadMsgs">
            <summary>
            获取未读消息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.ClearMsgs">
            <summary>
            清除站内信
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.MsgController.MarkRead(System.Int32)">
            <summary>
            标记为已读
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.NoticeController">
            <summary>
            网站公告
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.NoticeController.NoticeService">
            <summary>
            公告
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.NoticeController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.INoticeService,Microsoft.AspNetCore.Hosting.IHostingEnvironment,System.Net.Http.IHttpClientFactory)">
            <summary>
            网站公告
            </summary>
            <param name="noticeService"></param>
            <param name="hostingEnvironment"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.NoticeController.Index(System.Int32,System.Int32,System.Int32)">
            <summary>
            公告列表
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.NoticeController.Details(System.Int32)">
            <summary>
            公告详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.NoticeController.Write(Masuit.MyBlogs.Core.Models.Entity.Notice)">
            <summary>
            发布公告
            </summary>
            <param name="notice"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.NoticeController.Delete(System.Int32)">
            <summary>
            删除公告
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.NoticeController.Edit(Masuit.MyBlogs.Core.Models.Entity.Notice)">
            <summary>
            编辑公告
            </summary>
            <param name="notice"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.NoticeController.GetPageData(System.Int32,System.Int32)">
            <summary>
            公告分页数据
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.NoticeController.Get(System.Int32)">
            <summary>
            公告详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.NoticeController.Last">
            <summary>
            最近一条公告
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.PassportController">
            <summary>
            登录授权
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.PassportController.UserInfoService">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.PassportController.LoginRecordService">
            <summary>
            登录记录
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PassportController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ILoginRecordService,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            登录授权
            </summary>
            <param name="userInfoService"></param>
            <param name="loginRecordService"></param>
            <param name="env"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PassportController.ResultData(System.Object,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="isTrue"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PassportController.Login">
            <summary>
            登录页
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PassportController.Login(System.String,System.String,System.String,System.String)">
            <summary>
            登陆检查
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="valid"></param>
            <param name="remem"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PassportController.ValidateCode">
            <summary>
            生成验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PassportController.CheckValidateCode(System.String)">
            <summary>
            检查验证码
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PassportController.GetUserInfo">
            <summary>
            获取用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PassportController.Logout">
            <summary>
            注销登录
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.PostController">
            <summary>
            文章管理
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IPostService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ICategoryService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBroadcastService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ISeminarService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IPostHistoryVersionService,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Masuit.LuceneEFCore.SearchEngine.Interfaces.ISearchEngine{Masuit.MyBlogs.Core.Infrastructure.DataContext},System.Net.Http.IHttpClientFactory)">
            <summary>
            文章管理
            </summary>
            <param name="postService"></param>
            <param name="categoryService"></param>
            <param name="broadcastService"></param>
            <param name="seminarService"></param>
            <param name="postHistoryVersionService"></param>
            <param name="hostingEnvironment"></param>
            <param name="searchEngine"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Details(System.Int32,System.String)">
            <summary>
            文章详情页
            </summary>
            <param name="id"></param>
            <param name="kw"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.History(System.Int32,System.Int32,System.Int32)">
            <summary>
            文章历史版本
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.HistoryVersion(System.Int32,System.Int32)">
            <summary>
            文章历史版本
            </summary>
            <param name="id"></param>
            <param name="hid"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.CompareVersion(System.Int32,System.Int32,System.Int32)">
            <summary>
            版本对比
            </summary>
            <param name="id"></param>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.VoteDown(System.Int32)">
            <summary>
            反对
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.VoteUp(System.Int32)">
            <summary>
            支持
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Publish">
            <summary>
            投稿页
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Publish(Masuit.MyBlogs.Core.Models.DTO.PostInputDto)">
            <summary>
            发布投稿
            </summary>
            <param name="post"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.GetTag">
            <summary>
            获取标签
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.All">
            <summary>
            标签云
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.CheckViewToken(System.String)">
            <summary>
            检查访问密码
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.GetViewToken(System.String)">
            <summary>
            检查授权邮箱
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Fixtop(System.Int32)">
            <summary>
            固顶
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Pass(System.Int32)">
            <summary>
            审核
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Delete(System.Int32)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Restore(System.Int32)">
            <summary>
            还原版本
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Truncate(System.Int32)">
            <summary>
            彻底删除文章
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Get(System.Int32)">
            <summary>
            获取文章
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Read(System.Int32)">
            <summary>
            文章详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.GetAllData">
            <summary>
            获取所有文章
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.GetPageData(System.Int32,System.Int32,Masuit.MyBlogs.Core.Models.Enum.OrderBy,System.String)">
            <summary>
            获取文章分页
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.GetPending(System.Int32,System.Int32,System.String)">
            <summary>
            获取未审核文章
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Edit(Masuit.MyBlogs.Core.Models.DTO.PostInputDto,System.Boolean,System.Boolean)">
            <summary>
            编辑
            </summary>
            <param name="post"></param>
            <param name="notify"></param>
            <param name="reserve"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Write(Masuit.MyBlogs.Core.Models.DTO.PostInputDto,System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            发布
            </summary>
            <param name="post"></param>
            <param name="timespan"></param>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.AddSeminar(System.Int32,System.Int32)">
            <summary>
            添加专题
            </summary>
            <param name="id"></param>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.RemoveSeminar(System.Int32,System.Int32)">
            <summary>
            移除专题
            </summary>
            <param name="id"></param>
            <param name="sid"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.DeleteHistory(System.Int32)">
            <summary>
            删除历史版本
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.ViewToken">
            <summary>
            获取文章访问密码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.PostController.Revert(System.Int32)">
            <summary>
            还原版本
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.SearchController">
            <summary>
            站内搜索
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.SearchController.SearchDetailsService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SearchController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ISearchDetailsService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IPostService,Masuit.LuceneEFCore.SearchEngine.Interfaces.ISearchEngine{Masuit.MyBlogs.Core.Infrastructure.DataContext})">
            <summary>
            站内搜索
            </summary>
            <param name="searchDetailsService"></param>
            <param name="postService"></param>
            <param name="searchEngine"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SearchController.Search(System.String,System.Int32,System.Int32)">
            <summary>
            搜索页
            </summary>
            <param name="wd"></param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SearchController.SearchList(System.Int32,System.Int32,System.String)">
            <summary>
            关键词搜索记录
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SearchController.HotKey">
            <summary>
            热词
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SearchController.Delete(System.Int32)">
            <summary>
            删除搜索记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.SeminarController">
            <summary>
            专题页
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.SeminarController.SeminarService">
            <summary>
            专题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.SeminarController.PostService">
            <summary>
            文章
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SeminarController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ISeminarService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IPostService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ISeminarPostService)">
            <summary>
            专题页
            </summary>
            <param name="seminarService"></param>
            <param name="postService"></param>
            <param name="seminarPostService"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SeminarController.Index(System.Int32,System.Int32,System.Int32,Masuit.MyBlogs.Core.Models.Enum.OrderBy)">
            <summary>
            专题页
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <param name="size"></param>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SeminarController.Save(Masuit.MyBlogs.Core.Models.Entity.Seminar)">
            <summary>
            保存专题
            </summary>
            <param name="seminar"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SeminarController.Delete(System.Int32)">
            <summary>
            删除专题
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SeminarController.Get(System.Int32)">
            <summary>
            获取专题详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SeminarController.GetPageData(System.Int32,System.Int32)">
            <summary>
            专题分页列表
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SeminarController.GetAll">
            <summary>
            获取所有专题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SeminarController.AddPost(System.Int32,System.Int32)">
            <summary>
            给专题添加文章
            </summary>
            <param name="id"></param>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SeminarController.RemovePost(System.Int32,System.Int32)">
            <summary>
            移除文章
            </summary>
            <param name="id"></param>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.ShareController">
            <summary>
            快速分享
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.ShareController.FastShareService">
            <summary>
            快速分享
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ShareController.Index">
            <summary>
            快速分享
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ShareController.Add(Masuit.MyBlogs.Core.Models.Entity.FastShare)">
            <summary>
            添加快速分享
            </summary>
            <param name="share"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ShareController.Remove(System.Int32)">
            <summary>
            移除快速分享
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ShareController.Update(Masuit.MyBlogs.Core.Models.Entity.FastShare)">
            <summary>
            更新快速分享
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.SubscribeController">
            <summary>
            订阅服务
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.SubscribeController.BroadcastService">
            <summary>
            邮箱广播
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.SubscribeController.PostService">
            <summary>
            文章
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBroadcastService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IPostService,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            订阅服务
            </summary>
            <param name="broadcastService"></param>
            <param name="postService"></param>
            <param name="hostingEnvironment"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.ResultData(System.Object,System.Boolean,System.String,System.Boolean,System.Net.HttpStatusCode)">
            <summary>
            响应数据
            </summary>
            <param name="data">数据</param>
            <param name="success">响应状态</param>
            <param name="message">响应消息</param>
            <param name="isLogin">登录状态</param>
            <param name="code">http响应码</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.Rss">
            <summary>
            RSS订阅
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.Subscribe(System.String)">
            <summary>
            邮箱订阅
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.Cancel">
            <summary>
            取消订阅
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.Cancel(System.String)">
            <summary>
            取消邮箱订阅
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.Subscribe(System.String,System.String,System.String,System.Double,System.String)">
            <summary>
            邮箱订阅
            </summary>
            <param name="email"></param>
            <param name="act"></param>
            <param name="validate"></param>
            <param name="timespan"></param>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.Save(Masuit.MyBlogs.Core.Models.Entity.Broadcast)">
            <summary>
            保存订阅
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.Delete(System.Int32)">
            <summary>
            删除订阅
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.Change(System.Int32)">
            <summary>
            改变订阅类型
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.Get(System.Int32)">
            <summary>
            获取订阅
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SubscribeController.GetPageData(System.Int32,System.Int32,System.String)">
            <summary>
            订阅分页数据
            </summary>
            <param name="page"></param>
            <param name="size"></param>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.SystemController">
            <summary>
            系统设置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Controllers.SystemController.SystemSettingService">
            <summary>
            系统设置
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ISystemSettingService)">
            <summary>
            系统设置
            </summary>
            <param name="userInfoService"></param>
            <param name="systemSettingService"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.GetBaseInfo">
            <summary>
            获取硬件基本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.GetHistoryList">
            <summary>
            获取历史性能计数器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.GetSettings">
            <summary>
            获取设置信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.GetSetting(System.String)">
            <summary>
            获取设置项
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.Save(System.String)">
            <summary>
            保存设置
            </summary>
            <param name="sets"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.GetStatus">
            <summary>
            获取状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.MailTest(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            邮件测试
            </summary>
            <param name="smtp"></param>
            <param name="user"></param>
            <param name="pwd"></param>
            <param name="port"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.PathTest(System.String)">
            <summary>
            路径测试
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.ClearPerfCounter">
            <summary>
            清空性能计数器缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.IpBlackList">
            <summary>
            获取全局IP黑名单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.GetIPRangeBlackList">
            <summary>
            获取IP地址段黑名单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.SetIPRangeBlackList(System.String)">
            <summary>
            设置IP地址段黑名单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.IpWhiteList">
            <summary>
            全局IP白名单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.SetIpBlackList(System.String)">
            <summary>
            设置IP黑名单
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.SetIpWhiteList(System.String)">
            <summary>
            设置IP白名单
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.InterceptLog">
            <summary>
            获取拦截日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.ClearInterceptLog">
            <summary>
            清除拦截日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.AddToWhiteList(System.String)">
            <summary>
            将IP添加到白名单
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.SystemController.AddToBlackList(System.String)">
            <summary>
            将IP添加到黑名单
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.ToolsController">
            <summary>
            黑科技
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ToolsController.GetIpInfo(System.String)">
            <summary>
            获取ip地址详细信息
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ToolsController.Position(System.String,System.String)">
            <summary>
            根据经纬度获取详细地理信息
            </summary>
            <param name="lat"></param>
            <param name="lng"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.ToolsController.Address(System.String)">
            <summary>
            详细地理信息转经纬度
            </summary>
            <param name="addr"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.UploadController">
            <summary>
            文件上传
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UploadController.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,System.Net.Http.IHttpClientFactory)">
            <summary>
            文件上传
            </summary>
            <param name="hostingEnvironment"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UploadController.ResultData(System.Object,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="isTrue"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UploadController.UploadWord">
            <summary>
            上传Word转码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UploadController.Download(System.String)">
            <summary>
            文件下载
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UploadController.UeditorFileUploader">
            <summary>
            UEditor文件上传处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UploadController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传文件
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Controllers.UserController">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UserController.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService)">
            <summary>
            用户管理
            </summary>
            <param name="userInfoService"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UserController.ChangeUsername(System.Int32,System.String)">
            <summary>
            修改用户名
            </summary>
            <param name="id"></param>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UserController.ChangeNickName(System.Int32,System.String)">
            <summary>
            修改昵称
            </summary>
            <param name="id"></param>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UserController.ChangePassword(System.Int32,System.String,System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="id"></param>
            <param name="old"></param>
            <param name="pwd"></param>
            <param name="pwd2"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Controllers.UserController.ChangeAvatar(System.Int32,System.String)">
            <summary>
            修改头像
            </summary>
            <param name="id"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.AuthorityAttribute">
            <summary>
            授权验证过滤器
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.AuthorityAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>在执行操作方法之前由 ASP.NET MVC 框架调用。</summary>
            <param name="filterContext">筛选器上下文。</param>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.ExceptionMiddleware">
            <summary>
            异常拦截中间件
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.ExceptionMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            异常拦截中间件
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.ExceptionMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            执行调用
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.FirewallMiddleware">
            <summary>
            网站防火墙
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.FirewallMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            构造函数
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.FirewallMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            执行调用
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob">
            <summary>
            hangfire后台任务
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob.#ctor(Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IPostService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ISystemSettingService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ISearchDetailsService,Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ILinksService,System.Net.Http.IHttpClientFactory,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Masuit.LuceneEFCore.SearchEngine.Interfaces.ISearchEngine{Masuit.MyBlogs.Core.Infrastructure.DataContext})">
            <summary>
            hangfire后台任务
            </summary>
            <param name="userInfoService"></param>
            <param name="postService"></param>
            <param name="settingService"></param>
            <param name="searchDetailsService"></param>
            <param name="linksService"></param>
            <param name="httpClientFactory"></param>
            <param name="hostingEnvironment"></param>
            <param name="searchEngine"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob.LoginRecord(Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto,System.String,Masuit.MyBlogs.Core.Models.Enum.LoginType)">
            <summary>
            登录记录
            </summary>
            <param name="userInfo"></param>
            <param name="ip"></param>
            <param name="type"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob.PublishPost(Masuit.MyBlogs.Core.Models.Entity.Post)">
            <summary>
            文章定时发布
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob.RecordPostVisit(System.Int32)">
            <summary>
            文章访问记录
            </summary>
            <param name="pid"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob.InterceptLog(Masuit.MyBlogs.Core.Extensions.Hangfire.IpIntercepter)">
            <summary>
            防火墙拦截日志
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob.EverydayJob">
            <summary>
            每天的任务
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob.CheckLinks">
            <summary>
            检查友链
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob.CreateLuceneIndex">
            <summary>
            重建Lucene索引库
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.HangfireBackJob.StatisticsSearchKeywords">
            <summary>
            搜索统计
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.Hangfire.IHangfireBackJob">
            <summary>
            hangfire后台任务
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.IHangfireBackJob.LoginRecord(Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto,System.String,Masuit.MyBlogs.Core.Models.Enum.LoginType)">
            <summary>
            登陆记录
            </summary>
            <param name="userInfo"></param>
            <param name="ip"></param>
            <param name="type"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.IHangfireBackJob.PublishPost(Masuit.MyBlogs.Core.Models.Entity.Post)">
            <summary>
            文章定时发表
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.IHangfireBackJob.RecordPostVisit(System.Int32)">
            <summary>
            文章访问记录
            </summary>
            <param name="pid"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.IHangfireBackJob.EverydayJob">
            <summary>
            每日任务
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.IHangfireBackJob.CheckLinks">
            <summary>
            友链检查
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.IHangfireBackJob.CreateLuceneIndex">
            <summary>
            重建Lucene索引库
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.Hangfire.IHangfireBackJob.StatisticsSearchKeywords">
            <summary>
            搜索统计
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.LuceneHelper">
            <summary>
            Lucene帮助类
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.LuceneHelper.CutKeywords(System.String)">
            <summary>
            分词
            </summary>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.RequestInterceptMiddleware">
            <summary>
            请求拦截器
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.RequestInterceptMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            构造函数
            </summary>
            <param name="next"></param>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.UEditor.ConfigHandler">
            <summary>
            Config 的摘要说明
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.UEditor.ConfigHandler.#ctor(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Extensions.UEditor.ConfigHandler.Process">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.UEditor.CrawlerHandler">
            <summary>
            Crawler 的摘要说明
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.UEditor.Handler">
            <summary>
            Handler 的摘要说明
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.UEditor.ListFileManager">
            <summary>
            FileManager 的摘要说明
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.UEditor.NotSupportedHandler">
            <summary>
            NotSupportedHandler 的摘要说明
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.UEditor.PathFormatter">
            <summary>
            PathFormater 的摘要说明
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.UEditor.UeditorConfig">
            <summary>
            Config 的摘要说明
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Extensions.UEditor.UploadHandler">
            <summary>
            UploadHandler 的摘要说明
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Extensions.UEditor.UploadConfig.PathFormat">
            <summary>
            文件命名规则
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Extensions.UEditor.UploadConfig.UploadFieldName">
            <summary>
            上传表单域名称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Extensions.UEditor.UploadConfig.SizeLimit">
            <summary>
            上传大小限制
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Extensions.UEditor.UploadConfig.AllowExtensions">
            <summary>
            上传允许的文件格式
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Extensions.UEditor.UploadConfig.Base64">
            <summary>
            文件是否以 Base64 的形式上传
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Extensions.UEditor.UploadConfig.Base64Filename">
            <summary>
            Base64 字符串所表示的文件名
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Hubs.PerformanceCounter">
            <summary>
            性能计数器
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.PerformanceCounter.Time">
            <summary>
            当前时间戳
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.PerformanceCounter.CpuLoad">
            <summary>
            CPU当前负载
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.PerformanceCounter.Temperature">
            <summary>
            CPU核心温度
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.PerformanceCounter.MemoryUsage">
            <summary>
            内存使用率
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.PerformanceCounter.DiskRead">
            <summary>
            磁盘读
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.PerformanceCounter.DiskWrite">
            <summary>
            磁盘写
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.PerformanceCounter.Upload">
            <summary>
            网络上行
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.PerformanceCounter.Download">
            <summary>
            网络下行
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Hubs.MyHub">
            <summary>
            hub
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.MyHub.PerformanceCounter">
            <summary>
            性能计数器缓存
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Hubs.MyHub.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Hubs.MyHub.Connections">
            <summary>
            当前连接客户端
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Hubs.MyHub.OnConnectedAsync">
            <summary>
            连接事件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Hubs.MyHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            注销事件
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Hubs.MyHub.Counter(System.Int32,System.Threading.CancellationToken)">
            <summary>
            性能统计
            </summary>
            <param name="delay"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Infrastructure.DesignTimeDbContextFactory">
            <summary>
            勿删，数据库迁移时powershell会执行该方法
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1">
            <summary>
            DAL基类
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAll">
            <summary>
            获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAllNoTracking">
            <summary>
            获取所有实体（不跟踪）
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAllFromL2Cache">
            <summary>
            从二级缓存获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAllFromL2CacheNoTracking">
            <summary>
            从二级缓存获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAll``1">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TDto">映射实体</typeparam>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAllFromL2Cache``1">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TDto">映射实体</typeparam>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAll``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAllNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAllFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAllFromL2CacheNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAll``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetAllFromL2Cache``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntities(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntities``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntitiesFromL2Cache(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntitiesFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntitiesNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntitiesNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合（不跟踪实体）
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntities``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntities``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合（不跟踪实体）
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">输出类型</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntitiesFromL2CacheNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <param name="where">查询条件</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntitiesFromL2CacheNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntitiesFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <param name="where">查询条件</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadEntitiesFromL2Cache``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">输出类型</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntity``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntityAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntityNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntityNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据（不跟踪实体）
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntity``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条被AutoMapper映射后的数据（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntity``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条被AutoMapper映射后的数据（不跟踪实体）
            </summary>
            <typeparam name="TDto">映射实体</typeparam>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntityNoTrackingAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据（异步，不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetFirstEntityNoTrackingAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据（异步，不跟踪实体）
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetById(System.Object)">
            <summary>
            根据ID找实体
            </summary>
            <param name="id">实体id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.GetByIdAsync(System.Object)">
            <summary>
            根据ID找实体(异步)
            </summary>
            <param name="id">实体id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadPageEntities``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadPageEntitiesFromL2Cache``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从二级缓存读取
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadPageEntitiesNoTracking``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法（不跟踪实体）
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadPageEntities``2(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，取出被AutoMapper映射后的数据集合（不跟踪实体）
            </summary>
            <typeparam name="TS"></typeparam>
            <typeparam name="TDto"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadPageEntitiesFromL2CacheNoTracking``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从缓存读取（不跟踪实体）
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.LoadPageEntitiesFromL2Cache``2(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，取出被AutoMapper映射后的数据集合，优先从缓存读取（不跟踪实体）
            </summary>
            <typeparam name="TS"></typeparam>
            <typeparam name="TDto"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.DeleteById(System.Object)">
            <summary>
            根据ID删除实体
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.DeleteEntity(`0)">
            <summary>
            删除实体
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.DeleteEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.DeleteEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体（异步）
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.UpdateEntity(`0)">
            <summary>
            更新实体
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.UpdateEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},`0)">
            <summary>
            根据条件更新实体
            </summary>
            <param name="where">查询条件</param>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.UpdateEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},`0)">
            <summary>
            根据条件更新实体（异步）
            </summary>
            <param name="where">查询条件</param>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.AddEntity(`0)">
            <summary>
            添加实体
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.BulkInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            批量添加实体
            </summary>
            <param name="list">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.SaveChanges">
            <summary>
            统一保存数据
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.BulkSaveChanges">
            <summary>
            统一批量保存数据
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.SaveChangesAsync">
            <summary>
            统一保存数据（异步）
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            判断实体是否在数据库中存在
            </summary>
            <param name="where">查询条件</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            符合条件的个数
            </summary>
            <param name="where">查询条件</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.DeleteEntities(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.UpdateEntities(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            更新多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.BaseRepository`1.AddEntities(System.Collections.Generic.IList{`0})">
            <summary>
            添加多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAll">
            <summary>
            获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAllNoTracking">
            <summary>
            获取所有实体（不跟踪）
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAllFromL2Cache">
            <summary>
            从二级缓存获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAllFromL2CacheNoTracking">
            <summary>
            从二级缓存获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAll``1">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TDto">映射实体</typeparam>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAllFromL2Cache``1">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TDto">映射实体</typeparam>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAll``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAllNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAllFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAllFromL2CacheNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAll``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetAllFromL2Cache``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntities(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntities``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntities``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntities``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">输出类型</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntitiesFromL2Cache(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntitiesFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntitiesFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合，优先从二级缓存读取
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntitiesFromL2Cache``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合，优先从二级缓存读取
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">输出类型</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntitiesNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntitiesNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合（不跟踪实体）
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntitiesFromL2CacheNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <param name="where">查询条件</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadEntitiesFromL2CacheNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntity``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntity``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条被AutoMapper映射后的数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntity``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条被AutoMapper映射后的数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>映射实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntityAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntityNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntityNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据（不跟踪实体）
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntityNoTrackingAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据（异步，不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetFirstEntityNoTrackingAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据（异步，不跟踪实体）
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetById(System.Object)">
            <summary>
            根据ID找实体
            </summary>
            <param name="id">实体id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.GetByIdAsync(System.Object)">
            <summary>
            根据ID找实体(异步)
            </summary>
            <param name="id">实体id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadPageEntities``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadPageEntities``2(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，取出被AutoMapper映射后的数据集合
            </summary>
            <typeparam name="TS"></typeparam>
            <typeparam name="TDto"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadPageEntitiesFromL2Cache``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从二级缓存读取
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadPageEntitiesFromL2Cache``2(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从二级缓存读取，取出被AutoMapper映射后的数据集合
            </summary>
            <typeparam name="TS"></typeparam>
            <typeparam name="TDto"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadPageEntitiesNoTracking``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法（不跟踪实体）
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.LoadPageEntitiesFromL2CacheNoTracking``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从缓存读取（不跟踪实体）
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.DeleteById(System.Object)">
            <summary>
            根据ID删除实体
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.DeleteEntity(`0)">
            <summary>
            删除实体
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.DeleteEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.DeleteEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体（异步）
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.UpdateEntity(`0)">
            <summary>
            更新实体
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.UpdateEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},`0)">
            <summary>
            根据条件更新实体
            </summary>
            <param name="where">查询条件</param>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.UpdateEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},`0)">
            <summary>
            根据条件更新实体（异步）
            </summary>
            <param name="where">查询条件</param>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.AddEntity(`0)">
            <summary>
            添加实体
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.BulkInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            批量添加实体
            </summary>
            <param name="list">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.SaveChanges">
            <summary>
            统一保存数据
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.BulkSaveChanges">
            <summary>
            统一批量保存数据
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.SaveChangesAsync">
            <summary>
            统一保存数据（异步）
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            判断实体是否在数据库中存在
            </summary>
            <param name="where">查询条件</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            符合条件的个数
            </summary>
            <param name="where">查询条件</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.DeleteEntities(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.UpdateEntities(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            更新多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Repository.Interface.IBaseRepository`1.AddEntities(System.Collections.Generic.IList{`0})">
            <summary>
            添加多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>添加成功</returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1">
            <summary>
            业务层基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAll">
            <summary>
            获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAllNoTracking">
            <summary>
            获取所有实体（不跟踪）
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAllFromL2Cache">
            <summary>
            从二级缓存获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAllFromL2CacheNoTracking">
            <summary>
            从二级缓存获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAll``1">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TDto">映射实体</typeparam>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAllFromL2Cache``1">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TDto">映射实体</typeparam>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAll``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAllNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAllFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAllFromL2CacheNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAll``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetAllFromL2Cache``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntities(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.Masuit#MyBlogs#Core#Infrastructure#Services#Interface#IBaseService{T}#LoadEntities``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntities``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntities``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">输出类型</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntitiesFromL2Cache(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntitiesFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntitiesFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合，优先从二级缓存读取
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntitiesFromL2Cache``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合，优先从二级缓存读取
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">输出类型</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntitiesNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntitiesNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合（不跟踪实体）
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntitiesFromL2CacheNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <param name="where">查询条件</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadEntitiesFromL2CacheNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntity``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntity``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条被AutoMapper映射后的数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntity``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条被AutoMapper映射后的数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>映射实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntityAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据，优先从缓存读取
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntityNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntityNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据（不跟踪实体）
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntityNoTrackingAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据（异步，不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetFirstEntityNoTrackingAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据（异步，不跟踪实体）
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetById(System.Object)">
            <summary>
            根据ID找实体
            </summary>
            <param name="id">实体id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.GetByIdAsync(System.Object)">
            <summary>
            根据ID找实体(异步)
            </summary>
            <param name="id">实体id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadPageEntities``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadPageEntities``2(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，取出被AutoMapper映射后的数据集合
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadPageEntitiesFromL2Cache``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从二级缓存读取
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadPageEntitiesFromL2Cache``2(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从二级缓存读取，取出被AutoMapper映射后的数据集合
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadPageEntitiesNoTracking``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法（不跟踪实体）
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.LoadPageEntitiesFromL2CacheNoTracking``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从缓存读取（不跟踪实体）
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteById(System.Object)">
            <summary>
            根据ID删除实体
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteByIdSaved(System.Object)">
            <summary>
            根据ID删除实体并保存
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteByIdSavedAsync(System.Object)">
            <summary>
            根据ID删除实体并保存（异步）
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntity(`0)">
            <summary>
            删除实体并保存
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntitySaved(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntitySavedAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体（异步）
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntitySaved(`0)">
            <summary>
            删除实体并保存
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntitySavedAsync(`0)">
            <summary>
            删除实体并保存（异步）
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.UpdateEntity(`0)">
            <summary>
            更新实体
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.UpdateEntitySaved(`0)">
            <summary>
            更新实体并保存
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.UpdateEntitySavedAsync(`0)">
            <summary>
            更新实体并保存（异步）
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.UpdateEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},`0)">
            <summary>
            根据条件更新实体
            </summary>
            <param name="where">查询条件</param>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.UpdateEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},`0)">
            <summary>
            根据条件更新实体（异步）
            </summary>
            <param name="where">查询条件</param>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.AddEntity(`0)">
            <summary>
            添加实体
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.AddEntitySaved(`0)">
            <summary>
            添加实体并保存
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.AddEntitySavedAsync(`0)">
            <summary>
            添加实体并保存（异步）
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.SaveChanges">
            <summary>
            统一保存的方法
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.SaveChangesAsync">
            <summary>
            统一保存数据
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            判断实体是否在数据库中存在
            </summary>
            <param name="where">查询条件</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            统计符合条件的个数
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntities(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntitiesSaved(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除多个实体并保存
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.DeleteEntitiesSavedAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除多个实体并保存（异步）
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.UpdateEntities(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            更新多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.UpdateEntitiesSaved(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            更新多个实体并保存
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.UpdateEntitiesSavedAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            更新多个实体并保存（异步）
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.AddEntities(System.Collections.Generic.IList{`0})">
            <summary>
            添加多个实体并保存
            </summary>
            <param name="list">实体集合</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.AddEntitiesAsync(System.Collections.Generic.IList{`0})">
            <summary>
            添加多个实体并保存（异步）
            </summary>
            <param name="list">实体集合</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.BulkInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            批量添加实体
            </summary>
            <param name="list">需要添加的实体</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.BaseService`1.BulkSaveChanges">
            <summary>
            统一批量保存数据
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.CategoryService.Delete(System.Int32,System.Int32)">
            <summary>
            删除分类，并将该分类下的文章移动到新分类下
            </summary>
            <param name="id"></param>
            <param name="mid"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.CommentService.GetSelfAndAllChildrenCommentsByParentId(System.Int32)">
            <summary>
            通过存储过程获得自己以及自己所有的子元素集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.CommentService.GetSelfAndAllChildrenCommentsByParentId(Masuit.MyBlogs.Core.Models.Entity.Comment,System.Collections.Generic.List{Masuit.MyBlogs.Core.Models.Entity.Comment})">
            <summary>
            通过存储过程获得自己以及自己所有的子元素集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.CommentService.GetParentCommentIdByChildId(System.Int32)">
            <summary>
            根据无级子级找顶级父级评论id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.CommentService.GetParentCommentIdByChildId(Masuit.MyBlogs.Core.Models.Entity.Comment)">
            <summary>
            根据无级子级找顶级父级评论id
            </summary>
            <param name="com"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAll">
            <summary>
            获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAllNoTracking">
            <summary>
            获取所有实体（不跟踪）
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAllFromL2Cache">
            <summary>
            从二级缓存获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAllFromL2CacheNoTracking">
            <summary>
            从二级缓存获取所有实体
            </summary>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAll``1">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TDto">映射实体</typeparam>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAllFromL2Cache``1">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TDto">映射实体</typeparam>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAll``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAllNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAllFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAllFromL2CacheNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAll``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetAllFromL2Cache``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取所有实体
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntities(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntities``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntities``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntities``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">输出类型</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntitiesFromL2Cache(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntitiesFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntitiesFromL2Cache``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合，优先从二级缓存读取
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntitiesFromL2Cache``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个被AutoMapper映射后的集合，优先从二级缓存读取
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <typeparam name="TDto">输出类型</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntitiesNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntitiesNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合（不跟踪实体）
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntitiesFromL2CacheNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <param name="where">查询条件</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadEntitiesFromL2CacheNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            基本查询方法，获取一个集合，优先从二级缓存读取(不跟踪实体)
            </summary>
            <typeparam name="TS">排序字段</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序方式</param>
            <param name="isAsc">是否升序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntity``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntity``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条被AutoMapper映射后的数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntity``2(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条被AutoMapper映射后的数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <typeparam name="TDto">映射实体</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>映射实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntityAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntityNoTracking(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据（不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntityNoTracking``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据（不跟踪实体）
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntityNoTrackingAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取第一条数据（异步，不跟踪实体）
            </summary>
            <param name="where">查询条件</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetFirstEntityNoTrackingAsync``1(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            获取第一条数据（异步，不跟踪实体）
            </summary>
            <typeparam name="TS">排序</typeparam>
            <param name="where">查询条件</param>
            <param name="orderby">排序字段</param>
            <param name="isAsc">是否升序</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetById(System.Object)">
            <summary>
            根据ID找实体
            </summary>
            <param name="id">实体id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.GetByIdAsync(System.Object)">
            <summary>
            根据ID找实体(异步)
            </summary>
            <param name="id">实体id</param>
            <returns>实体</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadPageEntities``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadPageEntities``2(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，取出被AutoMapper映射后的数据集合
            </summary>
            <typeparam name="TS"></typeparam>
            <typeparam name="TDto"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadPageEntitiesFromL2Cache``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从二级缓存读取
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadPageEntitiesFromL2Cache``2(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从二级缓存读取，取出被AutoMapper映射后的数据集合
            </summary>
            <typeparam name="TS"></typeparam>
            <typeparam name="TDto"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadPageEntitiesNoTracking``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法（不跟踪实体）
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.LoadPageEntitiesFromL2CacheNoTracking``1(System.Int32,System.Int32,System.Int32@,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            高效分页查询方法，优先从缓存读取（不跟踪实体）
            </summary>
            <typeparam name="TS"></typeparam>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">每页大小</param>
            <param name="totalCount">数据总数</param>
            <param name="where">where Lambda条件表达式</param>
            <param name="orderby">orderby Lambda条件表达式</param>
            <param name="isAsc">升序降序</param>
            <returns>还未执行的SQL语句</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteById(System.Object)">
            <summary>
            根据ID删除实体
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteByIdSaved(System.Object)">
            <summary>
            根据ID删除实体并保存
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteByIdSavedAsync(System.Object)">
            <summary>
            根据ID删除实体并保存（异步）
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntity(`0)">
            <summary>
            删除实体并保存
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntitySaved(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntitySavedAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            根据条件删除实体（异步）
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntitySaved(`0)">
            <summary>
            删除实体并保存
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntitySavedAsync(`0)">
            <summary>
            删除实体并保存（异步）
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.UpdateEntity(`0)">
            <summary>
            更新实体
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.UpdateEntitySaved(`0)">
            <summary>
            更新实体并保存
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.UpdateEntitySavedAsync(`0)">
            <summary>
            更新实体并保存（异步）
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.UpdateEntity(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},`0)">
            <summary>
            根据条件更新实体
            </summary>
            <param name="where">查询条件</param>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.UpdateEntityAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},`0)">
            <summary>
            根据条件更新实体（异步）
            </summary>
            <param name="where">查询条件</param>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.AddEntity(`0)">
            <summary>
            添加实体
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.AddEntitySaved(`0)">
            <summary>
            添加实体并保存
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.AddEntitySavedAsync(`0)">
            <summary>
            添加实体并保存（异步）
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.SaveChanges">
            <summary>
            统一保存的方法
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.SaveChangesAsync">
            <summary>
            统一保存数据
            </summary>
            <returns>受影响的行数</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            判断实体是否在数据库中存在
            </summary>
            <param name="where">查询条件</param>
            <returns>是否存在</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            统计符合条件的个数
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntities(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntitiesSaved(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除多个实体并保存
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.DeleteEntitiesSavedAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            删除多个实体并保存（异步）
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.UpdateEntities(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            更新多个实体
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.UpdateEntitiesSaved(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            更新多个实体并保存
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.UpdateEntitiesSavedAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            更新多个实体并保存（异步）
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.AddEntities(System.Collections.Generic.IList{`0})">
            <summary>
            添加多个实体并保存
            </summary>
            <param name="list">实体集合</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.AddEntitiesAsync(System.Collections.Generic.IList{`0})">
            <summary>
            添加多个实体并保存（异步）
            </summary>
            <param name="list">实体集合</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.BulkInsert(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            批量添加实体
            </summary>
            <param name="list">需要添加的实体</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IBaseService`1.BulkSaveChanges">
            <summary>
            统一批量保存数据
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ICategoryService.Delete(System.Int32,System.Int32)">
            <summary>
            删除分类，并将该分类下的文章移动到新分类下
            </summary>
            <param name="id"></param>
            <param name="mid"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ICommentService.GetSelfAndAllChildrenCommentsByParentId(System.Int32)">
            <summary>
            通过存储过程获得自己以及自己所有的子元素集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ICommentService.GetParentCommentIdByChildId(System.Int32)">
            <summary>
            根据无级子级找顶级父级评论
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ILeaveMessageService.GetSelfAndAllChildrenMessagesByParentId(System.Int32)">
            <summary>
            通过存储过程获得自己以及自己所有的子元素集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.ILeaveMessageService.GetParentMessageIdByChildId(System.Int32)">
            <summary>
            根据无级子级找顶级父级留言
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IMenuService.GetChildrenMenusByParentId(System.Int32)">
            <summary>
            通过存储过程获得自己以及自己所有的子元素集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService.GetByUsername(System.String)">
            <summary>
            根据用户名获取
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService.Login(System.String,System.String)">
            <summary>
            登录
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService.Register(Masuit.MyBlogs.Core.Models.Entity.UserInfo)">
            <summary>
            注册
            </summary>
            <param name="userInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService.UsernameExist(System.String)">
            <summary>
            检查用户名是否存在
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService.EmailExist(System.String)">
            <summary>
            检查邮箱是否存在
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService.ChangePassword(System.String,System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="name">用户名，邮箱或者电话号码</param>
            <param name="oldPwd">旧密码</param>
            <param name="newPwd">新密码</param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.Interface.IUserInfoService.ResetPassword(System.String,System.String)">
            <summary>
            重置密码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.LeaveMessageService.GetSelfAndAllChildrenMessagesByParentId(System.Int32)">
            <summary>
            通过存储过程获得自己以及自己所有的子元素集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.LeaveMessageService.GetSelfAndAllChildrenMessagesByParentId(Masuit.MyBlogs.Core.Models.Entity.LeaveMessage,System.Collections.Generic.List{Masuit.MyBlogs.Core.Models.Entity.LeaveMessage})">
            <summary>
            通过存储过程获得自己以及自己所有的子元素集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.LeaveMessageService.GetParentMessageIdByChildId(System.Int32)">
            <summary>
            根据无级子级找顶级父级留言id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.LeaveMessageService.GetParentMessageIdByChildId(Masuit.MyBlogs.Core.Models.Entity.LeaveMessage)">
            <summary>
            根据无级子级找顶级父级评论id
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.MenuService.GetChildrenMenusByParentId(System.Int32)">
            <summary>
            通过存储过程获得自己以及自己所有的子元素集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.MenuService.GetChildrenMenusByParentId(Masuit.MyBlogs.Core.Models.Entity.Menu,System.Collections.Generic.List{Masuit.MyBlogs.Core.Models.Entity.Menu})">
            <summary>
            通过存储过程获得自己以及自己所有的子元素集合
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.AddEntitySaved(Masuit.MyBlogs.Core.Models.Entity.Post)">
            <summary>
            添加实体并保存
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.AddEntitySavedAsync(Masuit.MyBlogs.Core.Models.Entity.Post)">
            <summary>
            添加实体并保存（异步）
            </summary>
            <param name="t">需要添加的实体</param>
            <returns>添加成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.DeleteByIdSaved(System.Object)">
            <summary>
            根据ID删除实体并保存
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.DeleteEntitiesSaved(System.Collections.Generic.IEnumerable{Masuit.MyBlogs.Core.Models.Entity.Post})">
            <summary>
            删除多个实体并保存
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.DeleteByIdSavedAsync(System.Object)">
            <summary>
            根据ID删除实体并保存（异步）
            </summary>
            <param name="id">实体id</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.DeleteEntitiesSavedAsync(System.Collections.Generic.IEnumerable{Masuit.MyBlogs.Core.Models.Entity.Post})">
            <summary>
            删除多个实体并保存（异步）
            </summary>
            <param name="list">实体集合</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.DeleteEntitySaved(System.Linq.Expressions.Expression{System.Func{Masuit.MyBlogs.Core.Models.Entity.Post,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.DeleteEntitySaved(Masuit.MyBlogs.Core.Models.Entity.Post)">
            <summary>
            删除实体并保存
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.DeleteEntitySavedAsync(System.Linq.Expressions.Expression{System.Func{Masuit.MyBlogs.Core.Models.Entity.Post,System.Boolean}})">
            <summary>
            根据条件删除实体
            </summary>
            <param name="where">查询条件</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.DeleteEntitySavedAsync(Masuit.MyBlogs.Core.Models.Entity.Post)">
            <summary>
            删除实体并保存（异步）
            </summary>
            <param name="t">需要删除的实体</param>
            <returns>删除成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.UpdateEntitySaved(Masuit.MyBlogs.Core.Models.Entity.Post)">
            <summary>
            更新实体并保存
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.UpdateEntitiesSaved(System.Collections.Generic.IEnumerable{Masuit.MyBlogs.Core.Models.Entity.Post})">
            <summary>
            更新多个实体并保存
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.UpdateEntitiesSavedAsync(System.Collections.Generic.IEnumerable{Masuit.MyBlogs.Core.Models.Entity.Post})">
            <summary>
            更新多个实体并保存（异步）
            </summary>
            <param name="list">实体集合</param>
            <returns>更新成功</returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Infrastructure.Services.PostService.UpdateEntitySavedAsync(Masuit.MyBlogs.Core.Models.Entity.Post)">
            <summary>
            更新实体并保存（异步）
            </summary>
            <param name="t">更新后的实体</param>
            <returns>更新成功</returns>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.BaseDto">
            <summary>
            DTO基类
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BaseDto.Id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BaseDto.Status">
            <summary>
            条目状态
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.BroadcastInputDto">
            <summary>
            访客订阅表
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BroadcastInputDto.Email">
            <summary>
            订阅接收邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BroadcastInputDto.ValidateCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BroadcastInputDto.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BroadcastInputDto.SubscribeType">
            <summary>
            订阅类型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BroadcastOutputDto.Email">
            <summary>
            订阅接收邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BroadcastOutputDto.ValidateCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BroadcastOutputDto.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.BroadcastOutputDto.SubscribeType">
            <summary>
            订阅类型
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.CategoryInputDto">
            <summary>
            文章分类输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CategoryInputDto.Name">
            <summary>
            分类名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CategoryInputDto.Description">
            <summary>
            分类描述
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.CategoryOutputDto">
            <summary>
            文章分类输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CategoryOutputDto.Name">
            <summary>
            分类名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CategoryOutputDto.Description">
            <summary>
            分类描述
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto">
            <summary>
            评论表输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.Content">
            <summary>
            评论内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.PostId">
            <summary>
            文章ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.CommentDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.Browser">
            <summary>
            浏览器版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.OperatingSystem">
            <summary>
            操作系统版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.IsMaster">
            <summary>
            是否是博主
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.VoteCount">
            <summary>
            支持数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.AgainstCount">
            <summary>
            反对数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentInputDto.IP">
            <summary>
            访问者IP
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto">
            <summary>
            文章评论输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.Content">
            <summary>
            评论内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.PostId">
            <summary>
            文章ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.CommentDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.Browser">
            <summary>
            浏览器版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.OperatingSystem">
            <summary>
            操作系统版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.IsMaster">
            <summary>
            是否是博主
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.VoteCount">
            <summary>
            支持数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.CommentOutputDto.AgainstCount">
            <summary>
            反对数
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.KeywordsRankOutputDto">
            <summary>
            搜索统计输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.KeywordsRankOutputDto.Keywords">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.KeywordsRankOutputDto.Count">
            <summary>
            搜索次数
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto">
            <summary>
            留言板输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.Browser">
            <summary>
            浏览器版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.OperatingSystem">
            <summary>
            操作系统版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.IsMaster">
            <summary>
            是否是博主
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageInputDto.IP">
            <summary>
            提交人IP地址
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto">
            <summary>
            留言板输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto.Browser">
            <summary>
            浏览器版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto.OperatingSystem">
            <summary>
            操作系统版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LeaveMessageOutputDto.IsMaster">
            <summary>
            是否是博主
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.LinksInputDto">
            <summary>
            友情链接
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LinksInputDto.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LinksInputDto.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LinksInputDto.Except">
            <summary>
            是否检测白名单
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.LinksOutputDto">
            <summary>
            友情链接输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LinksOutputDto.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LinksOutputDto.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LinksOutputDto.Except">
            <summary>
            是否检测白名单
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LinksOutputDto.Recommend">
            <summary>
            是否是推荐站点
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.LoginRecordOutputDto">
            <summary>
            用户登录记录输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LoginRecordOutputDto.IP">
            <summary>
            登录点IP
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LoginRecordOutputDto.LoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LoginRecordOutputDto.Province">
            <summary>
            所在省份
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LoginRecordOutputDto.PhysicAddress">
            <summary>
            详细地理位置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LoginRecordOutputDto.LoginType">
            <summary>
            登录类型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.LoginRecordOutputDto.UserInfoId">
            <summary>
            登陆者ID
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.MenuInputDto">
            <summary>
            导航菜单输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuInputDto.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuInputDto.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuInputDto.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuInputDto.Sort">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuInputDto.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuInputDto.MenuType">
            <summary>
            菜单类型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuInputDto.NewTab">
            <summary>
            是否在新标签页打开
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.MenuOutputDto">
            <summary>
            导航菜单输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuOutputDto.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuOutputDto.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuOutputDto.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuOutputDto.Sort">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuOutputDto.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuOutputDto.MenuType">
            <summary>
            菜单类型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MenuOutputDto.NewTab">
            <summary>
            是否在新标签页打开
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.MiscInputDto">
            <summary>
            杂项页输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MiscInputDto.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MiscInputDto.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MiscInputDto.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MiscInputDto.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.MiscOutputDto">
            <summary>
            杂项页输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MiscOutputDto.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MiscOutputDto.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MiscOutputDto.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.MiscOutputDto.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.NoticeInputDto">
            <summary>
            网站公告输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.NoticeInputDto.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.NoticeInputDto.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.NoticeInputDto.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.NoticeInputDto.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.NoticeOutputDto">
            <summary>
            网站公告输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.NoticeOutputDto.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.NoticeOutputDto.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.NoticeOutputDto.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.NoticeOutputDto.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.NoticeOutputDto.ViewCount">
            <summary>
            访问次数
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.PostInputDto">
            <summary>
            文章输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.Keyword">
            <summary>
            文章关键词
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.ProtectContent">
            <summary>
            受保护的内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.IsFixedTop">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.CategoryId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.ResourceName">
            <summary>
            资源名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.IsWordDocument">
            <summary>
            是否是Word文档
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.Email">
            <summary>
            作者邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostInputDto.Seminars">
            <summary>
            专题
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto">
            <summary>
            文章实体输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.Keyword">
            <summary>
            文章关键词
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.ProtectContent">
            <summary>
            受保护的内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.CategoryId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.TotalViewCount">
            <summary>
            浏览次数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.IsFixedTop">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.ResourceName">
            <summary>
            资源名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.IsWordDocument">
            <summary>
            是否是Word文档
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.Email">
            <summary>
            作者邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.VoteUpCount">
            <summary>
            支持数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.VoteDownCount">
            <summary>
            反对数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.CommentCount">
            <summary>
            评论数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.CategoryName">
            <summary>
            所属分类名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.Seminars">
            <summary>
            所属专题名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.PostOutputDto.AverageViewCount">
            <summary>
            每日平均访问量
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.SearchDetailsInputDto">
            <summary>
            搜索详细记录输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SearchDetailsInputDto.KeyWords">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SearchDetailsInputDto.SearchTime">
            <summary>
            搜索时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SearchDetailsInputDto.IP">
            <summary>
            访问者IP
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.SearchDetailsOutputDto">
            <summary>
            搜索详情输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SearchDetailsOutputDto.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SearchDetailsOutputDto.KeyWords">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SearchDetailsOutputDto.SearchTime">
            <summary>
            搜索时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SearchDetailsOutputDto.IP">
            <summary>
            访问者IP
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.SeminarInputDto">
            <summary>
            文章专题输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SeminarInputDto.Title">
            <summary>
            专题名称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SeminarInputDto.SubTitle">
            <summary>
            专题子标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SeminarInputDto.Description">
            <summary>
            专题描述
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.SeminarOutputDto">
            <summary>
            文章专题输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SeminarOutputDto.Title">
            <summary>
            专题名称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SeminarOutputDto.SubTitle">
            <summary>
            专题子标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.SeminarOutputDto.Description">
            <summary>
            专题描述
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto">
            <summary>
            用户信息输入模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto.NickName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto.SaltKey">
            <summary>
            加密盐
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto.IsAdmin">
            <summary>
            是否是管理员
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto.Avatar">
            <summary>
            用户头像
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoInputDto.AccessToken">
            <summary>
            AccessToken，接入第三方登陆时用
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto">
            <summary>
            用户信息输出模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto.NickName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto.IsAdmin">
            <summary>
            是否是管理员
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.DTO.UserInfoOutputDto.Avatar">
            <summary>
            用户头像
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Banner">
            <summary>
            banner
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Banner.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Banner.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Banner.Url">
            <summary>
            banner指向地址
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Banner.ImageUrl">
            <summary>
            图片地址
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.BaseEntity">
            <summary>
            基类型
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Broadcast">
            <summary>
            订阅表
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Broadcast.Email">
            <summary>
            订阅接收邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Broadcast.ValidateCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Broadcast.UpdateTime">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Broadcast.SubscribeType">
            <summary>
            订阅类型
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Category">
            <summary>
            文章分类
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Category.Name">
            <summary>
            分类名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Category.Description">
            <summary>
            分类描述
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Comment">
            <summary>
            评论表
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.Content">
            <summary>
            评论内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.PostId">
            <summary>
            文章ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.CommentDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.Browser">
            <summary>
            浏览器版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.OperatingSystem">
            <summary>
            操作系统版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.IsMaster">
            <summary>
            是否是博主
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.VoteCount">
            <summary>
            支持数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.AgainstCount">
            <summary>
            反对数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Comment.IP">
            <summary>
            提交人IP地址
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Donate">
            <summary>
            捐赠表
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Donate.NickName">
            <summary>
            捐赠人
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Donate.Email">
            <summary>
            捐赠人邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Donate.QQorWechat">
            <summary>
            捐赠人的QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Donate.EmailDisplay">
            <summary>
            捐赠人的显式邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Donate.QQorWechatDisplay">
            <summary>
            捐赠人的显式QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Donate.Amount">
            <summary>
            捐赠金额
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Donate.Via">
            <summary>
            捐赠途径
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Donate.DonateTime">
            <summary>
            捐赠时间
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.InternalMessage">
            <summary>
            站内信消息通知
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.InternalMessage.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.InternalMessage.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.InternalMessage.Link">
            <summary>
            消息链接
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.InternalMessage.Time">
            <summary>
            消息时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.InternalMessage.Read">
            <summary>
            已读状态
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage">
            <summary>
            留言板
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.Browser">
            <summary>
            浏览器版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.OperatingSystem">
            <summary>
            操作系统版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.IsMaster">
            <summary>
            是否是博主
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LeaveMessage.IP">
            <summary>
            提交人IP
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Links">
            <summary>
            友情链接
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Links.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Links.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Links.Except">
            <summary>
            是否检测白名单
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Links.Recommend">
            <summary>
            是否是推荐站点
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.LoginRecord">
            <summary>
            用户登陆记录
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LoginRecord.IP">
            <summary>
            登录点IP
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LoginRecord.LoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LoginRecord.Province">
            <summary>
            登录地所在省份
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LoginRecord.PhysicAddress">
            <summary>
            地理位置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LoginRecord.LoginType">
            <summary>
            登录类型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.LoginRecord.UserInfoId">
            <summary>
            关联的用户id
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Menu">
            <summary>
            导航菜单
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Menu.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Menu.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Menu.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Menu.Sort">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Menu.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Menu.MenuType">
            <summary>
            菜单类型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Menu.NewTab">
            <summary>
            是否在新标签页打开
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Misc">
            <summary>
            杂项页
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Misc.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Misc.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Misc.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Misc.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Notice">
            <summary>
            网站公告
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Notice.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Notice.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Notice.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Notice.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Notice.ViewCount">
            <summary>
            浏览人数
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Post">
            <summary>
            文章
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.ProtectContent">
            <summary>
            受保护的内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.IsFixedTop">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.CategoryId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.ResourceName">
            <summary>
            资源名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.IsWordDocument">
            <summary>
            是否是Word文档
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.Email">
            <summary>
            作者邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.Keyword">
            <summary>
            文章关键词
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.VoteUpCount">
            <summary>
            支持数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.VoteDownCount">
            <summary>
            反对数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.AverageViewCount">
            <summary>
            每日平均访问量
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.TotalViewCount">
            <summary>
            总访问量
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.IP">
            <summary>
            提交人IP地址
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.Category">
            <summary>
            分类
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.Comment">
            <summary>
            评论
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.Seminar">
            <summary>
            专题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Post.PostHistoryVersion">
            <summary>
            文章历史版本
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion">
            <summary>
            文章历史版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.ProtectContent">
            <summary>
            受保护的内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.ViewCount">
            <summary>
            浏览次数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.CategoryId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.PostId">
            <summary>
            文章id
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.ResourceName">
            <summary>
            资源名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.IsWordDocument">
            <summary>
            是否是Word文档
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.Email">
            <summary>
            作者邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.Category">
            <summary>
            分类
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.Post">
            <summary>
            新文章
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion.Seminar">
            <summary>
            专题
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.SearchDetails">
            <summary>
            搜索详细记录
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.SearchDetails.KeyWords">
            <summary>
            关键词
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.SearchDetails.SearchTime">
            <summary>
            搜索时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.SearchDetails.IP">
            <summary>
            访问者IP
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.Seminar">
            <summary>
            文章专题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Seminar.Title">
            <summary>
            专题名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Seminar.SubTitle">
            <summary>
            专题子标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.Seminar.Description">
            <summary>
            专题描述
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.SystemSetting">
            <summary>
            系统设置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.SystemSetting.Name">
            <summary>
            参数项名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.SystemSetting.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Entity.UserInfo">
            <summary>
            用户
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.UserInfo.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.UserInfo.NickName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.UserInfo.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.UserInfo.SaltKey">
            <summary>
            加密盐
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.UserInfo.IsAdmin">
            <summary>
            是否是管理员
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.UserInfo.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.UserInfo.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.UserInfo.Avatar">
            <summary>
            用户头像
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.Entity.UserInfo.AccessToken">
            <summary>
            AccessToken，接入第三方登陆时用
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Enum.LoginType">
            <summary>
            登录类型
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.MenuType.MainMenu">
            <summary>
            主菜单
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.MenuType.SubMenu">
            <summary>
            子菜单
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.MenuType.GalleryMenu">
            <summary>
            图片菜单
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.MenuType.IconMenu">
            <summary>
            图标菜单
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Enum.OrderBy">
            <summary>
            文章排序方式
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.OrderBy.PostDate">
            <summary>
            按发表时间
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.OrderBy.ModifyDate">
            <summary>
            按修改时间
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.OrderBy.ViewCount">
            <summary>
            按访问次数
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.OrderBy.CommentCount">
            <summary>
            按评论数
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.OrderBy.VoteCount">
            <summary>
            按投票数
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.OrderBy.AverageViewCount">
            <summary>
            每日平均访问量
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Enum.Status">
            <summary>
            数据状态
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Available">
            <summary>
            可用
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Forbidden">
            <summary>
            禁用
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Deleted">
            <summary>
            已删除
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Pending">
            <summary>
            审核中
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Pended">
            <summary>
            已发表
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Subscribing">
            <summary>
            订阅中
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Subscribed">
            <summary>
            订阅成功
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Display">
            <summary>
            显示
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Hidden">
            <summary>
            隐藏
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Schedule">
            <summary>
            定时发表
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Canceled">
            <summary>
            已取消
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.WaitingHandle">
            <summary>
            待处理
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Handled">
            <summary>
            已处理
            </summary>
        </member>
        <member name="F:Masuit.MyBlogs.Core.Models.Enum.Status.Unavailable">
            <summary>
            不可用
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Enum.SubscribeType">
            <summary>
            订阅类型
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.RequestModels.IssueHandleRequest">
            <summary>
            bug处理
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.RequestModels.IssueHandleRequest.Text">
            <summary>
            处理意见
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.RequestModels.PageFilter">
            <summary>
            分页筛选
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.RequestModels.PageFilter.Page">
            <summary>
            第几页
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.RequestModels.PageFilter.Size">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.RequestModels.PageFilter.Kw">
            <summary>
            关键词
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.RequestModels.RequestModelBase">
            <summary>
            请求模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.RequestModels.RequestModelBase.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Validation.IsEmailAttribute">
            <summary>
            邮箱格式验证
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.Validation.SubmitCheckAttribute">
            <summary>
            检查提交的内容
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Models.Validation.SubmitCheckAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>
            检查提交的内容
            </summary>
            <param name="checkLength">是否检查内容长度</param>
            <param name="checkContent">是否检查内容包含禁用词</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Models.Validation.SubmitCheckAttribute.#ctor(System.Int32,System.Boolean)">
            <summary>
            检查提交的内容
            </summary>
            <param name="maxLength">最大长度</param>
            <param name="checkContent">是否检查内容包含禁用词</param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Models.Validation.SubmitCheckAttribute.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            检查提交的内容
            </summary>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
            <param name="checkContent">是否检查内容包含禁用词</param>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel">
            <summary>
            评论视图模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.Content">
            <summary>
            评论内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.PostId">
            <summary>
            文章ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.CommentDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.Browser">
            <summary>
            浏览器版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.OperatingSystem">
            <summary>
            操作系统版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.IsMaster">
            <summary>
            是否是博主
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.VoteCount">
            <summary>
            支持数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.CommentViewModel.AgainstCount">
            <summary>
            反对数
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.EmailConfig">
            <summary>
            邮箱配置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.EmailConfig.Smtp">
            <summary>
            smtp服务器地址
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.EmailConfig.SendFrom">
            <summary>
            发送邮箱用户名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.EmailConfig.EmailPwd">
            <summary>
            发送邮箱密码
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.EmailConfig.ReceiveEmail">
            <summary>
            收件人
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.IndexPageViewModel">
            <summary>
            首页视图模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.IndexPageViewModel.Posts">
            <summary>
            文章列表
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.IndexPageViewModel.Notices">
            <summary>
            网站公告列表
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.IndexPageViewModel.Categories">
            <summary>
            分类列表
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.IndexPageViewModel.Tags">
            <summary>
            标签列表
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.IndexPageViewModel.HotSearch">
            <summary>
            近期热搜
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.IndexPageViewModel.Top6Post">
            <summary>
            热门文章
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.IndexPageViewModel.PostsQueryable">
            <summary>
            文章列表查询
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.IndexPageViewModel.Banner">
            <summary>
            banner文章
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel">
            <summary>
            留言板视图模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.QQorWechat">
            <summary>
            QQ或微信
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.ParentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.Browser">
            <summary>
            浏览器版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.OperatingSystem">
            <summary>
            操作系统版本
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.LeaveMessageViewModel.IsMaster">
            <summary>
            是否是博主
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.MiscViewModel">
            <summary>
            杂项页视图模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.MiscViewModel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.MiscViewModel.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.MiscViewModel.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.MiscViewModel.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.NoticeViewModel">
            <summary>
            网站公告视图模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.NoticeViewModel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.NoticeViewModel.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.NoticeViewModel.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.NoticeViewModel.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.PageDataModel">
            <summary>
            分页数据模型
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Models.ViewModel.PageDataModel.#ctor(System.Object,System.Int32,System.Int32)">
            <summary>
            分页数据模型
            </summary>
            <param name="data">数据</param>
            <param name="pageCount">页数</param>
            <param name="totalCount">总条数</param>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PageDataModel.Data">
            <summary>
            分页数据
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PageDataModel.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PageDataModel.TotalCount">
            <summary>
            总条数
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.PageFootViewModel">
            <summary>
            页脚视图模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PageFootViewModel.Links">
            <summary>
            友情链接
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel">
            <summary>
            文章数据模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.ViewCount">
            <summary>
            浏览次数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.IsFixedTop">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.ResourceName">
            <summary>
            资源名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.IsWordDocument">
            <summary>
            是否是Word文档
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.Email">
            <summary>
            作者邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.VoteUpCount">
            <summary>
            支持数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.VoteDownCount">
            <summary>
            反对数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostDataModel.ModifyCount">
            <summary>
            修改次数
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel">
            <summary>
            文章视图模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.Author">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.CategoryId">
            <summary>
            分类id
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.ViewCount">
            <summary>
            浏览次数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.PostDate">
            <summary>
            发表时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.ModifyDate">
            <summary>
            修改时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.IsFixedTop">
            <summary>
            是否置顶
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.ResourceName">
            <summary>
            资源名
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.IsWordDocument">
            <summary>
            是否是Word文档
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.Email">
            <summary>
            作者邮箱
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.VoteUpCount">
            <summary>
            支持数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.VoteDownCount">
            <summary>
            反对数
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.LastAccessTime">
            <summary>
            最后访问时间
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.PostViewModel.CategoryName">
            <summary>
            所属分类名
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.ResponseModel">
            <summary>
            响应模型
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.ResponseModel.Success">
            <summary>
            成功状态
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.ResponseModel.IsLogin">
            <summary>
            登录状态
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.ResponseModel.Message">
            <summary>
            响应消息
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Models.ViewModel.ResponseModel.Data">
            <summary>
            响应数据
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Models.ViewModel.SimplePostModel">
            <summary>
            简单文章模型
            </summary>
        </member>
        <member name="T:Masuit.MyBlogs.Core.Startup">
            <summary>
            asp.net core核心配置
            </summary>
        </member>
        <member name="P:Masuit.MyBlogs.Core.Startup.AutofacContainer">
            <summary>
            依赖注入容器
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            asp.net core核心配置
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureServices
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Masuit.MyBlogs.Core.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Masuit.MyBlogs.Core.Infrastructure.DataContext,Masuit.MyBlogs.Core.Extensions.Hangfire.IHangfireBackJob,Masuit.LuceneEFCore.SearchEngine.LuceneIndexerOptions)">
            <summary>
            Configure
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="db"></param>
            <param name="hangfire"></param>
            <param name="luceneIndexerOptions"></param>
        </member>
        <member name="T:Masuit.MyBlogs.Core.MyRestrictiveAuthorizationFilter">
            <summary>
            hangfire授权拦截器
            </summary>
        </member>
        <member name="M:Masuit.MyBlogs.Core.MyRestrictiveAuthorizationFilter.Authorize(Hangfire.Dashboard.DashboardContext)">
            <summary>
            授权校验
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Service.UserInfoService.GetByUsername(System.String)">
            <summary>
            根据用户名获取
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Service.UserInfoService.Login(System.String,System.String)">
            <summary>
            登录
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Service.UserInfoService.Register(Masuit.MyBlogs.Core.Models.Entity.UserInfo)">
            <summary>
            注册
            </summary>
            <param name="userInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Service.UserInfoService.UsernameExist(System.String)">
            <summary>
            检查用户名是否存在
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Service.UserInfoService.EmailExist(System.String)">
            <summary>
            检查邮箱是否存在
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Service.UserInfoService.ChangePassword(System.String,System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="name">用户名，邮箱或者电话号码</param>
            <param name="oldPwd">旧密码</param>
            <param name="newPwd">新密码</param>
            <returns></returns>
        </member>
        <member name="M:Service.UserInfoService.ResetPassword(System.String,System.String)">
            <summary>
            重置密码
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
