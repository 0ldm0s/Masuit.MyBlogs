// <auto-generated />
using Masuit.MyBlogs.Core.Infrastructure.Application;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace Masuit.MyBlogs.Core.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190303082558_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Broadcast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("Status");

                    b.Property<int>("SubscribeType");

                    b.Property<DateTime>("UpdateTime");

                    b.Property<string>("ValidateCode");

                    b.HasKey("Id");

                    b.ToTable("Broadcast");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgainstCount");

                    b.Property<string>("Browser")
                        .HasMaxLength(255);

                    b.Property<DateTime>("CommentDate");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("IP");

                    b.Property<bool>("IsMaster");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(24);

                    b.Property<string>("OperatingSystem")
                        .HasMaxLength(255);

                    b.Property<int>("ParentId");

                    b.Property<int>("PostId");

                    b.Property<string>("QQorWechat");

                    b.Property<int>("Status");

                    b.Property<int>("VoteCount");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Donate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount");

                    b.Property<DateTime>("DonateTime");

                    b.Property<string>("Email");

                    b.Property<string>("EmailDisplay");

                    b.Property<string>("NickName");

                    b.Property<string>("QQorWechat");

                    b.Property<string>("QQorWechatDisplay");

                    b.Property<int>("Status");

                    b.Property<string>("Via");

                    b.HasKey("Id");

                    b.ToTable("Donate");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.FastShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link");

                    b.Property<int>("Sort");

                    b.Property<int>("Status");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("FastShare");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.InternalMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<string>("Link");

                    b.Property<bool>("Read");

                    b.Property<int>("Status");

                    b.Property<DateTime>("Time");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("InternalMessage");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.LeaveMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .HasMaxLength(255);

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("IP");

                    b.Property<bool>("IsMaster");

                    b.Property<string>("NickName")
                        .IsRequired();

                    b.Property<string>("OperatingSystem")
                        .HasMaxLength(255);

                    b.Property<int>("ParentId");

                    b.Property<DateTime>("PostDate");

                    b.Property<string>("QQorWechat");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("LeaveMessage");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Links", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Except");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("Recommend");

                    b.Property<int>("Status");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.LoginRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IP");

                    b.Property<DateTime>("LoginTime");

                    b.Property<int>("LoginType");

                    b.Property<string>("PhysicAddress");

                    b.Property<string>("Province");

                    b.Property<int>("Status");

                    b.Property<int>("UserInfoId");

                    b.HasKey("Id");

                    b.HasIndex("UserInfoId");

                    b.ToTable("LoginRecord");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon");

                    b.Property<int>("MenuType");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("NewTab");

                    b.Property<int>("ParentId");

                    b.Property<int>("Sort");

                    b.Property<int>("Status");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Misc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("ModifyDate");

                    b.Property<DateTime>("PostDate");

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Misc");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Notice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("ModifyDate");

                    b.Property<DateTime>("PostDate");

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.ToTable("Notice");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(24);

                    b.Property<double>("AverageViewCount");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(true);

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255);

                    b.Property<bool>("IsBanner");

                    b.Property<bool>("IsFixedTop");

                    b.Property<bool>("IsWordDocument");

                    b.Property<string>("Keyword")
                        .HasMaxLength(256);

                    b.Property<string>("Label")
                        .HasMaxLength(256)
                        .IsUnicode(true);

                    b.Property<DateTime>("ModifyDate");

                    b.Property<DateTime>("PostDate");

                    b.Property<string>("ProtectContent");

                    b.Property<string>("ResourceName");

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int>("TotalViewCount");

                    b.Property<int>("VoteDownCount")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int>("VoteUpCount");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.PostAccessRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AccessTime");

                    b.Property<int>("ClickCount");

                    b.Property<int>("PostId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostAccessRecord");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<bool>("IsWordDocument");

                    b.Property<string>("Label")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ModifyDate");

                    b.Property<int>("PostId");

                    b.Property<string>("ProtectContent");

                    b.Property<string>("ResourceName");

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PostId");

                    b.ToTable("PostHistoryVersion");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.SearchDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IP");

                    b.Property<string>("KeyWords")
                        .IsRequired()
                        .IsUnicode(true);

                    b.Property<DateTime>("SearchTime");

                    b.HasKey("Id");

                    b.ToTable("SearchDetails");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Seminar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Seminar");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.SeminarPost", b =>
                {
                    b.Property<int>("SeminarId")
                        .HasColumnName("Seminar_Id");

                    b.Property<int>("PostId")
                        .HasColumnName("Post_Id");

                    b.HasKey("SeminarId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("SeminarPost");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.SeminarPostHistoryVersion", b =>
                {
                    b.Property<int>("SeminarId")
                        .HasColumnName("Seminar_Id");

                    b.Property<int>("PostHistoryVersionId")
                        .HasColumnName("PostHistoryVersion_Id");

                    b.HasKey("SeminarId", "PostHistoryVersionId");

                    b.HasIndex("PostHistoryVersionId");

                    b.ToTable("SeminarPostHistoryVersion");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.SystemSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("SystemSetting");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken");

                    b.Property<string>("Avatar");

                    b.Property<string>("Email");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("NickName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("QQorWechat");

                    b.Property<string>("SaltKey")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Comment", b =>
                {
                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.Post", "Post")
                        .WithMany("Comment")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.LoginRecord", b =>
                {
                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.UserInfo", "UserInfo")
                        .WithMany("LoginRecord")
                        .HasForeignKey("UserInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.Post", b =>
                {
                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.Category", "Category")
                        .WithMany("Post")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.PostAccessRecord", b =>
                {
                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.Post", "Post")
                        .WithMany("PostAccessRecord")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion", b =>
                {
                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.Category", "Category")
                        .WithMany("PostHistoryVersion")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.Post", "Post")
                        .WithMany("PostHistoryVersion")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.SeminarPost", b =>
                {
                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.Post", "Post")
                        .WithMany("Seminar")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.Seminar", "Seminar")
                        .WithMany("Post")
                        .HasForeignKey("SeminarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Masuit.MyBlogs.Core.Models.Entity.SeminarPostHistoryVersion", b =>
                {
                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.PostHistoryVersion", "PostHistoryVersion")
                        .WithMany("Seminar")
                        .HasForeignKey("PostHistoryVersionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Masuit.MyBlogs.Core.Models.Entity.Seminar", "Seminar")
                        .WithMany("PostHistoryVersion")
                        .HasForeignKey("SeminarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
